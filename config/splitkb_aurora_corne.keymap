/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

/ { 
    behaviors {
        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };
    };
}; 

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  ;  | BKSP/DEL |
// |  TAB |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |          |
// | CTRL |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  |          |
//                 | GUI | L2 | SPC/ALT |   | ENT/SHFT | L1 |     |
                        bindings = <
   &kp ESC   &kp Q &kp W &kp F &kp P &kp B     &kp J &kp L &kp U     &kp Y   &kp SEMI  &bspc_del
   &kp TAB   &kp A &kp R &kp S &kp T &kp G     &kp M &kp N &kp E     &kp I   &kp O     &trans
   &kp LCTRL &kp Z &kp X &kp C &kp D &kp V     &kp K &kp H &kp COMMA &kp DOT &kp FSLH  &trans
               &kp LGUI &mo 2 &mt LALT SPC     &mt LSHFT RET &mo 1 &trans
                        >;
                };

                symbol_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  '  |  <  |  >  |  "  |  .  |   |  &  |  _  |  [  |  ]  |  %  | BKSP/DEL |
// |  TAB |  !  |  -  |  +  |  =  |  #  |   |  |  |  :  |  (  |  )  |  ?  |          |
// | CTRL |  ^  |  /  |  *  |  \  |  `  |   |  ~  |  $  |  {  |  }  |  @  |          |
//                |     |     | SPC/ALT |   | ENT/SHFT |     |     |
                        bindings = <
   &kp ESC   &kp SQT   &kp LT    &kp GT    &kp DQT   &kp DOT       &kp AMPS  &kp UNDER &kp LBKT &kp RBKT &kp PRCNT &bspc_del
   &kp TAB   &kp EXCL  &kp MINUS &kp PLUS  &kp EQUAL &kp HASH      &kp PIPE  &kp COLON &kp LPAR &kp RPAR &kp QMARK &trans
   &kp LCTRL &kp CARET &kp FSLH  &kp ASTRK &kp BSLH  &kp GRAVE     &kp TILDE &kp DLLR  &kp LBRC &kp RBRC &kp AT    &trans
                                  &kp LGUI &trans &mt LALT SPC     &mt LSHFT RET &trans &trans
                        >;
                };

                number_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  0  |  7  |  8  |  9  | PRNT|   |     |     |     |     | POW | BKSP/DEL |
// |  TAB |  0  |  4  |  5  |  6  |     |   |  ⬅ |  ⬇  |  ⬆  |  ⮕ |     |          |
// | CTRL |  0  |  1  |  2  |  3  |     |   |     |     |     |     |     |          |
//                |     |     | SPC/ALT |   | ENT/SHFT |     |     |
                        bindings = <
   &kp ESC   &kp N0 &kp N7 &kp N8 &kp N9 &kp PRCNT     &trans   &trans   &trans   &trans    &ext_power EP_TOG &bspc_del
   &kp TAB   &kp N0 &kp N4 &kp N5 &kp N6 &trans        &kp LEFT &kp DOWN &kp UP   &kp RIGHT &trans            &trans
   &kp LCTRL &kp N0 &kp N1 &kp N2 &kp N3 &trans        &trans   &trans   &trans   &trans    &trans            &trans
                      &kp LGUI &trans &mt LALT SPC     &mt LSHFT RET &trans &trans
                        >;
                };
        };
};
