/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ { 
    behaviors {
        bspc_del: backspace_delete {
            compatible = "zmk,behavior-mod-morph";
            label = "BACKSPACE_DELETE";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp DELETE>;
            mods = <(MOD_RSFT|MOD_LSFT)>;
            keep-mods = <(MOD_RSFT)>;
        };
    };
}; 

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  Q  |  W  |  F  |  P  |  B  |   |  J  |  L   |  U  |  Y  |  ;  | BKSP |
// | SHFT |  A  |  R  |  S  |  T  |  G  |   |  M  |  N   |  E  |  I  |  O  |      |
// | CTRL |  Z  |  X  |  C  |  D  |  V  |   |  K  |  H   |  ,  |  .  |  /  | ALT  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp ESC   &kp Q &kp W &kp F &kp P &kp B   &kp J &kp L &kp U     &kp Y   &kp SEMI  &bspc_del
   &kp LSHFT &kp A &kp R &kp S &kp T &kp G   &kp M &kp N &kp E     &kp I   &kp O     &kp SQT
   &kp LCTRL &kp Z &kp X &kp C &kp D &kp V   &kp K &kp H &kp COMMA &kp DOT &kp FSLH  &kp RALT
                  &kp LGUI &mo 2 &kp SPACE   &kp RET &mo 1 &kp RALT
                        >;
                };

                symbol_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  '  |  <  |  >  |  "  |  .  |   |  &  |  _  |  [  |  ]  |  %  | BKSP |
// | SHFT |  !  |  -  |  +  |  =  |  #  |   |  |  |  :  |  (  |  )  |  ?  |      |
// | CTRL |  ^  |  /  |  *  |  \  |  `  |   |  ~  |  $  |  {  |  }  |  @  | ALT  |
//                    |     |     | SPC |   | ENT |     |     |
                        bindings = <
   &kp ESC   &kp SQT   &kp LT    &kp GT    &kp DQT   &kp DOT      &kp AMPS  &kp UNDER &kp LBKT &kp RBKT &kp PRCNT &bspc_del
   &kp LSHFT &kp EXCL  &kp MINUS &kp PLUS  &kp EQUAL &kp HASH     &kp PIPE  &kp COLON &kp LPAR &kp RPAR &kp QMARK &trans
   &kp LCTRL &kp CARET &kp FSLH  &kp ASTRK &kp BSLH  &kp GRAVE    &kp TILDE &kp DLLR  &kp LBRC &kp RBRC &kp AT    &kp RALT
                                     &kp LGUI &trans &kp SPACE    &kp RET &trans &kp RALT
                        >;
                };

                number_layer {
// -----------------------------------------------------------------------------------------
// |  ESC |  0  |  7  |  8  |  9  | PRNT|   |     |     |     |     |     | BKSP |
// | CTRL |  0  |  4  |  5  |  6  |     |   |  ⬅ |  ⬇  |  ⬆  |  ⮕ |     |     |
// | SHFT |  0  |  1  |  2  |  3  |     |   |     |     |     |     |     | ALT  |
//                    |     |     | SPC |   | ENT |     |     |
                        bindings = <
   &kp TAB   &kp N0 &kp N7 &kp N8 &kp N9 &kp PRCNT   &trans &trans   &trans   &trans &trans    &bspc_del
   &kp LSHFT &kp N0 &kp N4 &kp N5 &kp N6 &trans      &trans &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans
   &kp LCTRL &kp N0 &kp N1 &kp N2 &kp N3 &trans      &trans &trans   &trans   &trans &trans    &kp RALT
                         &kp LGUI &trans &kp SPACE   &kp RET &trans &kp RALT
                        >;
                };
        };
};
